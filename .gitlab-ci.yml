stages:
    - pre-analysis
    - build
    - deploy
    - publish

python:quality:
    artifacts:
        reports:
            cobertura: cobertura.xml
            junit: mypy.xml
        expire_in: 10 days
    cache: &python-cache
        key: ${CI_COMMIT_REF_SLUG}
        paths:
            - ".venv"
    coverage: '/line-rate="0.([0-9]{1,2})\d*"/'
    image: gitlab.lrz.de:5005/i4/software/docker-images/python3.9-poetry
    needs: [ ]
    rules: &python-rules
        -   changes:
                - "gl_pages_forward/**.py"
                - .gitlab-ci.yml
        -   if: '$CI_COMMIT_BRANCH == "main"'
        -   if: '$CI_COMMIT_BRANCH == "development"'
        -   if: '$CI_COMMIT_TAG'
    script:
        - poetry install
        - poetry run mypy --cobertura-xml-report=. --junit-xml=mypy.xml --pretty gl_pages_forward
        - head -n 1 cobertura.xml
    stage: pre-analysis

python:build:
    artifacts:
        paths:
            - dist
        expire_in: 3 days
    cache: *python-cache
    rules: *python-rules
    image: gitlab.lrz.de:5005/i4/software/docker-images/python3.9-poetry
    needs:
        - python:quality
    script:
        - poetry build
    stage: build

python:deploy:
    cache: *python-cache
    image: gitlab.lrz.de:5005/i4/software/docker-images/python3.9-poetry
    rules:
    -   if: '$CI_COMMIT_TAG'
    script:
        - poetry config repositories.lrz https://gitlab.lrz.de/api/v4/projects/${CI_PROJECT_ID}/packages/pypi
        - poetry publish --repository lrz --username ${REGISTRY_USERNAME} --password ${REGISTRY_PASSWORD}
    stage: deploy
    needs:
        - python:build

container:deploy:
  image: docker:18
  services:
  - docker:18-dind
  stage: deploy
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull $IMAGE_NAME:latest || true
    - docker build
        --build-arg=COMMIT=$CI_COMMIT_SHA
        --build-arg=BRANCH=$CI_COMMIT_BRANCH
        --build-arg=COMMIT_SHORT=$CI_COMMIT_SHORT_SHA
        --build-arg=TAG=$CI_COMMIT_TAG
        --tag $IMAGE_NAME:$CI_COMMIT_SHA
        --tag $IMAGE_NAME:latest
        --tag $IMAGE_NAME:$CI_COMMIT_SHORT_SHA
        --tag $IMAGE_NAME:$CI_COMMIT_REF_NAME
        .
    - docker push $IMAGE_NAME
    - docker push $IMAGE_TAG
  variables:
    IMAGE_NAME: $CI_REGISTRY_IMAGE
    IMAGE_TAG: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG:$CI_COMMIT_SHA
  rules:
      -   if: '$CI_COMMIT_TAG'

pages:
    stage: publish
    image: gitlab.lrz.de:5005/i4/software/docker-images/python3.9-poetry
    script:
        - poetry install
        - poetry run create-forward-pages --config-file gl_pages_forward/tests/config.yml
    artifacts:
        paths:
        - public
